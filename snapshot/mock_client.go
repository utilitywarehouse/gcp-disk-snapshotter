// Code generated by MockGen. DO NOT EDIT.
// Source: snapshot/client.go

// Package snapshot is a generated GoMock package.
package snapshot

import (
	gomock "github.com/golang/mock/gomock"
	v1 "google.golang.org/api/compute/v1"
	reflect "reflect"
)

// MockGCPSnapClientInterface is a mock of GCPSnapClientInterface interface
type MockGCPSnapClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGCPSnapClientInterfaceMockRecorder
}

// MockGCPSnapClientInterfaceMockRecorder is the mock recorder for MockGCPSnapClientInterface
type MockGCPSnapClientInterfaceMockRecorder struct {
	mock *MockGCPSnapClientInterface
}

// NewMockGCPSnapClientInterface creates a new mock instance
func NewMockGCPSnapClientInterface(ctrl *gomock.Controller) *MockGCPSnapClientInterface {
	mock := &MockGCPSnapClientInterface{ctrl: ctrl}
	mock.recorder = &MockGCPSnapClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGCPSnapClientInterface) EXPECT() *MockGCPSnapClientInterfaceMockRecorder {
	return m.recorder
}

// GetDiskList mocks base method
func (m *MockGCPSnapClientInterface) GetDiskList() ([]v1.Disk, error) {
	ret := m.ctrl.Call(m, "GetDiskList")
	ret0, _ := ret[0].([]v1.Disk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiskList indicates an expected call of GetDiskList
func (mr *MockGCPSnapClientInterfaceMockRecorder) GetDiskList() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiskList", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).GetDiskList))
}

// ListSnapshots mocks base method
func (m *MockGCPSnapClientInterface) ListSnapshots(diskSelfLink string) ([]v1.Snapshot, error) {
	ret := m.ctrl.Call(m, "ListSnapshots", diskSelfLink)
	ret0, _ := ret[0].([]v1.Snapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSnapshots indicates an expected call of ListSnapshots
func (mr *MockGCPSnapClientInterfaceMockRecorder) ListSnapshots(diskSelfLink interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSnapshots", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).ListSnapshots), diskSelfLink)
}

// ListClientCreatedSnapshots mocks base method
func (m *MockGCPSnapClientInterface) ListClientCreatedSnapshots(diskSelfLink string) ([]v1.Snapshot, error) {
	ret := m.ctrl.Call(m, "ListClientCreatedSnapshots", diskSelfLink)
	ret0, _ := ret[0].([]v1.Snapshot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClientCreatedSnapshots indicates an expected call of ListClientCreatedSnapshots
func (mr *MockGCPSnapClientInterfaceMockRecorder) ListClientCreatedSnapshots(diskSelfLink interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClientCreatedSnapshots", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).ListClientCreatedSnapshots), diskSelfLink)
}

// CreateSnapshot mocks base method
func (m *MockGCPSnapClientInterface) CreateSnapshot() (string, error) {
	ret := m.ctrl.Call(m, "CreateSnapshot")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSnapshot indicates an expected call of CreateSnapshot
func (mr *MockGCPSnapClientInterfaceMockRecorder) CreateSnapshot() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSnapshot", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).CreateSnapshot))
}

// DeleteSnapshot mocks base method
func (m *MockGCPSnapClientInterface) DeleteSnapshot(snapName string) (string, error) {
	ret := m.ctrl.Call(m, "DeleteSnapshot", snapName)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSnapshot indicates an expected call of DeleteSnapshot
func (mr *MockGCPSnapClientInterfaceMockRecorder) DeleteSnapshot(snapName interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSnapshot", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).DeleteSnapshot), snapName)
}

// GetZonalOperationStatus mocks base method
func (m *MockGCPSnapClientInterface) GetZonalOperationStatus(operation, zone string) (string, error) {
	ret := m.ctrl.Call(m, "GetZonalOperationStatus", operation, zone)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetZonalOperationStatus indicates an expected call of GetZonalOperationStatus
func (mr *MockGCPSnapClientInterfaceMockRecorder) GetZonalOperationStatus(operation, zone interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetZonalOperationStatus", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).GetZonalOperationStatus), operation, zone)
}

// GetGlobalOperationStatus mocks base method
func (m *MockGCPSnapClientInterface) GetGlobalOperationStatus(operation string) (string, error) {
	ret := m.ctrl.Call(m, "GetGlobalOperationStatus", operation)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGlobalOperationStatus indicates an expected call of GetGlobalOperationStatus
func (mr *MockGCPSnapClientInterfaceMockRecorder) GetGlobalOperationStatus(operation interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGlobalOperationStatus", reflect.TypeOf((*MockGCPSnapClientInterface)(nil).GetGlobalOperationStatus), operation)
}
